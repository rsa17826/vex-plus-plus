{
  STR(start)STR(hub)
  STR(author)STR()
  STR(description)STR()
  STR(version)INT(41)
  STR(stages){
    STR(hub){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(basic){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(single spike){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(10x spike){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(updown){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(downup){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(water){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(solar){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(slope){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(pushable box){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(microwave){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(locked box){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(glass){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(leftright){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(falling){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(bouncy){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(spark counterClockwise){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(spark clockwise){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(inner level){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(goal){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(buzsaw){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(bouncing buzsaw){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(cannon){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(checkpoint){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(closing spikes){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Gravity Down Lever){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Gravity up Lever){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(speed Up Lever){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(growing buzsaw){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(key){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(light switch){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(pole){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Pole Quadrant){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Pulley){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Quadrant){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Rotating Buzzsaw){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(Scythe){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(star){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(death boundary){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(block death boundary){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(nowj){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(falling spike){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
    STR(portal){
      STR(color)INT(7)
      STR(changeSpeedOnSlopes)BOOL(false)
    }
  }
  STRNAME(gameVersion)INT(227)
  STRNAME(levelVersion)INT(3)
}